//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ForceMoveComponent forceMove { get { return (ForceMoveComponent)GetComponent(GameComponentsLookup.ForceMove); } }
    public bool hasForceMove { get { return HasComponent(GameComponentsLookup.ForceMove); } }

    public void AddForceMove(Unity.Mathematics.float3 newValue, bool newForce_move) {
        var index = GameComponentsLookup.ForceMove;
        var component = (ForceMoveComponent)CreateComponent(index, typeof(ForceMoveComponent));
        component.value = newValue;
        component.force_move = newForce_move;
        AddComponent(index, component);
    }

    public void ReplaceForceMove(Unity.Mathematics.float3 newValue, bool newForce_move) {
        var index = GameComponentsLookup.ForceMove;
        var component = (ForceMoveComponent)CreateComponent(index, typeof(ForceMoveComponent));
        component.value = newValue;
        component.force_move = newForce_move;
        ReplaceComponent(index, component);
    }

    public void RemoveForceMove() {
        RemoveComponent(GameComponentsLookup.ForceMove);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherForceMove;

    public static Entitas.IMatcher<GameEntity> ForceMove {
        get {
            if (_matcherForceMove == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ForceMove);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherForceMove = matcher;
            }

            return _matcherForceMove;
        }
    }
}
