//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ACTGame.KCCPhysicalMoverComponent aCTGameKCCPhysicalMover { get { return (ACTGame.KCCPhysicalMoverComponent)GetComponent(GameComponentsLookup.ACTGameKCCPhysicalMover); } }
    public bool hasACTGameKCCPhysicalMover { get { return HasComponent(GameComponentsLookup.ACTGameKCCPhysicalMover); } }

    public void AddACTGameKCCPhysicalMover(ACTGame.KCC.PhysicsMover newValue) {
        var index = GameComponentsLookup.ACTGameKCCPhysicalMover;
        var component = (ACTGame.KCCPhysicalMoverComponent)CreateComponent(index, typeof(ACTGame.KCCPhysicalMoverComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceACTGameKCCPhysicalMover(ACTGame.KCC.PhysicsMover newValue) {
        var index = GameComponentsLookup.ACTGameKCCPhysicalMover;
        var component = (ACTGame.KCCPhysicalMoverComponent)CreateComponent(index, typeof(ACTGame.KCCPhysicalMoverComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveACTGameKCCPhysicalMover() {
        RemoveComponent(GameComponentsLookup.ACTGameKCCPhysicalMover);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherACTGameKCCPhysicalMover;

    public static Entitas.IMatcher<GameEntity> ACTGameKCCPhysicalMover {
        get {
            if (_matcherACTGameKCCPhysicalMover == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ACTGameKCCPhysicalMover);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherACTGameKCCPhysicalMover = matcher;
            }

            return _matcherACTGameKCCPhysicalMover;
        }
    }
}
