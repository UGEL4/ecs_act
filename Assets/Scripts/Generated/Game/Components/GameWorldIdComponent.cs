//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public WorldIdComponent worldId { get { return (WorldIdComponent)GetComponent(GameComponentsLookup.WorldId); } }
    public bool hasWorldId { get { return HasComponent(GameComponentsLookup.WorldId); } }

    public void AddWorldId(long newValue) {
        var index = GameComponentsLookup.WorldId;
        var component = (WorldIdComponent)CreateComponent(index, typeof(WorldIdComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceWorldId(long newValue) {
        var index = GameComponentsLookup.WorldId;
        var component = (WorldIdComponent)CreateComponent(index, typeof(WorldIdComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveWorldId() {
        RemoveComponent(GameComponentsLookup.WorldId);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWorldId;

    public static Entitas.IMatcher<GameEntity> WorldId {
        get {
            if (_matcherWorldId == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.WorldId);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWorldId = matcher;
            }

            return _matcherWorldId;
        }
    }
}
